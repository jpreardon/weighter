<% provide(:title, t("weight-index-title")) %>
<div class="row">
  <div class="col-sm">
    <h2><%= t("weight-index-title") %></h2>
  </div>
</div>
<div class="row mb-3">
  <div class="col-sm">
    <% if @weights.empty? %>
      <p><%= t("no-weights-message") %></p>
    <% end %>
    <%= link_to t("add-new-weight"), new_weight_path, class: "btn btn-primary" %>
  </div>
</div>
<% if !@weights.empty? %>
  <div class="row">
    <div class="col-sm" id="chart-section">
      <!-- DATAVIZ SECTION -->
      <svg id="chart"></svg>
      <script>
        var data = <%= @weights.reverse.to_json.html_safe %>
        var container_width = document.getElementById("chart-section").offsetWidth
        var container_height = container_width * 0.25
        var margin = {
              top: container_height * 0.04, 
              right: container_width * 0.03125, 
              bottom: container_height * 0.06, 
              left: container_width * 0.04166 
            }

        if (container_width < 1140) {
          margin.left = 0
        }

        var width = container_width - margin.left - margin.right
        var height = container_height - margin.top - margin.bottom

        var x = d3.scaleBand()
          .rangeRound([0, width])
          .paddingInner(.01)
          .domain(data.map(function(d) { return d.date }))

        if (container_width >= 1140) {
          var xAxis = d3.axisBottom(x)
        }

        var y = d3.scaleLinear()
          .range([height, 0])
          .domain([d3.min(data, function(d) { return type(d.weight) }) - 1, d3.max(data, function(d) { return type(d.weight) })])

        if (container_width >= 1140) {
          var yAxis = d3.axisLeft(y)
        }
        
        var chart = d3.select("#chart")
            .attr("width", container_width)
            .attr("height", container_height)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")")

        if (container_width >= 1140) {
          chart.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis)

          chart.append("g")
            .attr("class", "y axis")
            .call(yAxis)
          .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", -42)
            .attr("dy", "0.71em")
            .style("text-anchor", "end")
            .text("Weight")
        }

        chart.selectAll(".bar")
          .data(data)
        .enter().append("rect")
          .attr("class", "bar")
          .attr("x", function(d) { return x(d.date) })
          .attr("y", function(d) { return y(d.weight) })
          .attr("height", function(d) { return height - y(type(d.weight)) })
          .attr("width", x.bandwidth() )

        function type(d) {
          d.value = +d.value
          return d
        }

      </script>
    </div>
  </div>
  <div class="row">
    <div class="col-sm">
      <div class="card border-dark mb-3" style="max-width: 18rem;">
        <div class="card-header"><%= t("minimum") %></div>
        <div class="card-body text-dark">
          <p class="card-text display-4"><%= @weights.min_by(&:weight).weight %></p>
        </div>
      </div>
    </div>
    <div class="col-sm">
      <div class="card border-dark mb-3" style="max-width: 18rem;">
        <div class="card-header"><%= t("maximum") %></div>
        <div class="card-body text-dark">
          <p class="card-text display-4"><%= @weights.max_by(&:weight).weight %></p>
        </div>
      </div>
    </div>
    <div class="col-sm">
      <div class="card border-dark mb-3" style="max-width: 18rem;">
        <div class="card-header"><%= t("average") %></div>
        <div class="card-body text-dark">
          <p class="card-text display-4"><%= averageWeight(@weights) %></p>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-sm">
      <table class="table table-hover table-sm">
          <thead>
            <tr>
              <th scope="col"><%= t("date") %></th>
              <th scope="col"><%= t("weight") %></th>
            </tr>
          </thead>
          <tbody>
            <% @weights.each do | weight | %>
              <tr>
                <th scope="row"><%= link_to formatDateWeekdays(weight.date), weight %></th>
                <td><span class="<%= weight.weight <= averageWeight(@weights).to_d ? "text-success" : "text-danger" %>"><%= weight.weight %></span></td>
              </tr>
            <% end %>
        </tbody>
      </table>
      <%= link_to t("show-all-weights"), weights_path(numrecords: "all"), class: "btn btn-outline-secondary" unless params[:numrecords] == "all" %>
  </div>
  <% end %>
</div>






